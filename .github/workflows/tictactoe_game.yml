name: Tic-Tac-Toe Game Update

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Game action (move or reset)'
        required: true
        default: 'reset'
        type: choice
        options:
        - reset
        - move
      row:
        description: 'Row for move (0-2)'
        required: false
        type: string # –ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã Python –º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å None/–ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
      col:
        description: 'Column for move (0-2)'
        required: false
        type: string # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ

jobs:
  update_game:
    runs-on: ubuntu-latest
    permissions:
      contents: write # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ README –∏ board.json
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # –ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –≤–∞—à—É –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Python 3.x

      - name: Run game logic
        env:
          GITHUB_REPOSITORY: ${{ github.repository }} # –ü–µ—Ä–µ–¥–∞–µ–º –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ —Å–∫—Ä–∏–ø—Ç
        shell: bash
        run: |
          echo "–ó–∞–ø—É—Å–∫ GitHub Action –¥–ª—è –∏–≥—Ä—ã –ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏"
          echo "–î–µ–π—Å—Ç–≤–∏–µ: ${{ github.event.inputs.action }}"
          echo "–°—Ç—Ä–æ–∫–∞: ${{ github.event.inputs.row }}"
          echo "–ö–æ–ª–æ–Ω–∫–∞: ${{ github.event.inputs.col }}"

          CMD="python game.py --action ${{ github.event.inputs.action }}"

          if [[ "${{ github.event.inputs.action }}" == "move" ]]; then
            # –î–ª—è 'move' –¥–æ–±–∞–≤–ª—è–µ–º row –∏ col, –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã
            # –°–∫—Ä–∏–ø—Ç Python —Ç–µ–ø–µ—Ä—å —Å–∞–º –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ
            if [[ -n "${{ github.event.inputs.row }}" ]]; then
              CMD="$CMD --row \"${{ github.event.inputs.row }}\""
            fi
            if [[ -n "${{ github.event.inputs.col }}" ]]; then
              CMD="$CMD --col \"${{ github.event.inputs.col }}\""
            fi
          fi
          
          echo "–í—ã–ø–æ–ª–Ω—è–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞: $CMD"
          eval $CMD # –ò—Å–ø–æ–ª—å–∑—É–µ–º eval, —á—Ç–æ–±—ã –∫–∞–≤—ã—á–∫–∏ –≤–æ–∫—Ä—É–≥ –∑–Ω–∞—á–µ–Ω–∏–π row/col –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md board.json
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º
          if git diff --staged --quiet; then
            echo "–ò–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –Ω–µ—Ç."
          else
            COMMIT_MSG="üéÆ Tic-Tac-Toe: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã"
            if [[ "${{ github.event.inputs.action }}" == "move" ]]; then
              COMMIT_MSG="$COMMIT_MSG (–•–æ–¥: ${{ github.event.inputs.row }},${{ github.event.inputs.col }})"
            elif [[ "${{ github.event.inputs.action }}" == "reset" ]]; then
              COMMIT_MSG="$COMMIT_MSG (–°–±—Ä–æ—Å –∏–≥—Ä—ã)"
            fi
            git commit -m "$COMMIT_MSG"
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—à –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–∂–µ–Ω, –µ—Å–ª–∏ README –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å —á–∞—Å—Ç–æ –∏ –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
            # –ù–æ –æ–±—ã—á–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–±—ã—á–Ω–æ–≥–æ push. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –±–µ–∑ --force.
            git push 
            echo "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}